generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  email      String       @unique @db.VarChar(255)
  provider   String       @db.VarChar(100)
  image      String?
  oauth_id   String
  createdAt  DateTime     @default(now())
  ChatGroup  ChatGroup[]
  GroupUsers GroupUsers[]

  @@map("users")
}

model ChatGroup {
  id         String       @id @default(uuid()) @db.Uuid
  user       User         @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    Int
  title      String       @db.VarChar(101)
  passcode   String       @db.VarChar(255)
  createdAt  DateTime     @default(now())
  GroupUsers GroupUsers[]
  Chats      Chats[]

  @@index([createdAt])
  @@map("chat_groups")
}

model GroupUsers {
  id        Int       @id @default(autoincrement())
  group     ChatGroup @relation(fields: [group_id], references: [id], onDelete: Cascade)
  group_id  String    @db.Uuid
  name      String
  createdAt DateTime  @default(now())

  User   User? @relation(fields: [userId], references: [id])
  userId Int?
}

model Chats {
  id        String    @id @default(uuid()) @db.Uuid
  group     ChatGroup @relation(fields: [group_id], references: [id], onDelete: Cascade)
  group_id  String    @db.Uuid
  message   String?
  name      String
  createdAt DateTime  @default(now())

  @@index([createdAt])
  @@map("chats")
}
